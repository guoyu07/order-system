<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd">


	<!-- <context:property-placeholder location="classpath:constvar.properties" 
		/> -->
	<!-- ActiveMQ 连接工厂 -->
	<!-- 真正可以产生Connection的ConnectionFactory，由对应的 JMS服务厂商提供 -->
	<bean id="connectinFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
		<property name="brokerURL" value="${activemq.server.url}" />
	</bean>
	<!-- Spring Caching连接工厂 -->
	<!-- Spring用于管理真正的ConnectionFactory的ConnectionFactory -->
	<bean id="cachingConnectionFactory"
		class="org.springframework.jms.connection.CachingConnectionFactory">
		<!-- 目标ConnectionFactory对应真实的可以产生JMS Connection的ConnectionFactory -->
		<property name="targetConnectionFactory" ref="connectinFactory"></property>
		<!-- Session缓存数量 -->
		<property name="sessionCacheSize" value="10"></property>
	</bean>

	<!-- 配置消息发送目的地方式 -->
	<!-- Queue队列：仅有一个订阅者会收到消息，消息一旦被处理就不会存在队列中 -->

	<bean id="notifyQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="q.notify"></constructor-arg>
	</bean>

	<!-- Spring JMS Template 配置JMS模版 -->
	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="cachingConnectionFactory" />
	</bean>
	<!-- 使用Spring JmsTemplate 的消息生产者 -->
	<bean id="queueMessageProducer" class="cn.com.xbed.commond.jms.QueueMessageProducer">
		<property name="jmsTemplate" ref="jmsTemplate"></property>
		<property name="notifyQueue" ref="notifyQueue"></property>
		<property name="messageConverter" ref="messageConverter"></property>
	</bean>


	<bean id="messageConverter" class="cn.com.xbed.commond.jms.NotifyMessageConverter">
	</bean>

	<bean id="logTool" class="cn.com.xbed.commond.LogTool">
		<property name="notifyMessageProducer" ref="queueMessageProducer"></property>
	</bean>
	<bean id="xbedMQClient" class="cn.com.xbed.commond.XbedMQClient">
		<property name="notifyMessageProducer" ref="queueMessageProducer"></property>
	</bean>

	<!-- 监听者的配置 begin -->
	<bean id="cleanDoneQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="user.notify.readychecking"></constructor-arg>
	</bean>
	
	<bean id="cleanDoneListener" class="cn.com.xbed.app.commons.listener.CleanDoneListener" />
	
	<bean id="queueContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectinFactory"></property>
		<property name="destination" ref="cleanDoneQueue"></property>
		<property name="messageListener" ref="cleanDoneListener"></property>
	</bean>
	<!-- 监听者的配置 end -->
	
	
	
	<!-- 监听者的配置 begin -->
	<bean id="overstayAutoCheckinQueue" class="org.apache.activemq.command.ActiveMQQueue">
		<constructor-arg value="ordersytem.listener.overstayAutoCheckin"></constructor-arg>
	</bean>

	<bean id="overstayListener" class="cn.com.xbed.app.commons.listener.OverstayListener" />
	
	<bean id="queueContainerOverstayListener"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="connectinFactory"></property>
		<property name="destination" ref="overstayAutoCheckinQueue"></property>
		<property name="messageListener" ref="overstayListener"></property>
	</bean>
	<!-- 监听者的配置 end -->
</beans>
